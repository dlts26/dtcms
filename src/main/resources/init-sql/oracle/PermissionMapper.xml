<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.embd.words.mapper.sys.PermissionMapper">
	<sql id="Base_Column_List">
		ID, PID, NAME, TYPE, SORT, URL, PERM_CODE as permCode,
		ICON, STATE
	</sql>
	<sql id="Blob_Column_List">
		DESCRIPTION
	</sql>

	<select id="selectByPrimaryKey" resultType="com.embd.words.domain.sys.Permission"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from t_sys_permission
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from T_SYS_PERMISSION where ID = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.embd.words.domain.sys.Permission">
		insert into t_sys_permission
		(ID, PID, NAME,
		TYPE, SORT, URL, PERM_CODE,
		ICON, STATE, DESCRIPTION
		)
		values (#{id,jdbcType=INTEGER},
		#{pid,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{type,jdbcType=VARCHAR},
		#{sort,jdbcType=INTEGER},
		#{url,jdbcType=VARCHAR},
		#{permCode,jdbcType=VARCHAR},
		#{icon,jdbcType=VARCHAR},
		#{state,jdbcType=VARCHAR},
		#{description,jdbcType=LONGVARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.embd.words.domain.sys.Permission">
		insert into t_sys_permission
		<trim prefix="(" suffix=")" suffixOverrides=",">

			ID,

			<if test="pid != null">
				PID,
			</if>
			<if test="name != null">
				NAME,
			</if>
			<if test="type != null">
				TYPE,
			</if>
			<if test="sort != null">
				SORT,
			</if>
			<if test="url != null">
				URL,
			</if>
			<if test="permCode != null">
				PERM_CODE,
			</if>
			<if test="icon != null">
				ICON,
			</if>
			<if test="state != null">
				STATE,
			</if>
			<if test="description != null">
				DESCRIPTION,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="id == null">
				SEQ_SYS_PERMISSION.NEXTVAL,
			</if>
			<if test="pid != null">
				#{pid,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				#{sort,jdbcType=INTEGER},
			</if>
			<if test="url != null">
				#{url,jdbcType=VARCHAR},
			</if>
			<if test="permCode != null">
				#{permCode,jdbcType=VARCHAR},
			</if>
			<if test="icon != null">
				#{icon,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				#{description,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.embd.words.domain.sys.Permission">
		update t_sys_permission
		<set>
			<if test="pid != null">
				PID = #{pid,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				NAME = #{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				TYPE = #{type,jdbcType=VARCHAR},
			</if>
			<if test="sort != null">
				SORT = #{sort,jdbcType=INTEGER},
			</if>
			<if test="url != null">
				URL = #{url,jdbcType=VARCHAR},
			</if>
			<if test="permCode != null">
				PERM_CODE = #{permCode,jdbcType=VARCHAR},
			</if>
			<if test="icon != null">
				ICON = #{icon,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				STATE = #{state,jdbcType=VARCHAR},
			</if>
			<if test="description != null">
				DESCRIPTION = #{description,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.embd.words.domain.sys.Permission">
		update
		t_sys_permission
		set PID = #{pid,jdbcType=INTEGER},
		NAME =
		#{name,jdbcType=VARCHAR},
		TYPE = #{type,jdbcType=VARCHAR},
		SORT =
		#{sort,jdbcType=INTEGER},
		URL = #{url,jdbcType=VARCHAR},
		PERM_CODE =
		#{permCode,jdbcType=VARCHAR},
		ICON = #{icon,jdbcType=VARCHAR},
		STATE =
		#{state,jdbcType=VARCHAR},
		DESCRIPTION =
		#{description,jdbcType=LONGVARCHAR}
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.embd.words.domain.sys.Permission">
		update
		t_sys_permission
		set PID = #{pid,jdbcType=INTEGER},
		NAME =
		#{name,jdbcType=VARCHAR},
		TYPE
		= #{type,jdbcType=VARCHAR},
		SORT =
		#{sort,jdbcType=INTEGER},
		URL =
		#{url,jdbcType=VARCHAR},
		PERM_CODE =
		#{permCode,jdbcType=VARCHAR},
		ICON =
		#{icon,jdbcType=VARCHAR},
		STATE =
		#{state,jdbcType=VARCHAR}
		where ID =
		#{id,jdbcType=INTEGER}
	</update>
	<select id="findPermissions" resultType="com.embd.words.domain.sys.Permission">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from t_sys_permission
		where id IN(SELECT permission_id FROM
		t_sys_role_permission
		WHERE role_id
		IN(SELECT role_id FROM
		t_sys_user_role WHERE
		user_id=#{userId}))
	</select>
	<select id="findMenus" resultType="com.embd.words.domain.sys.Permission">
		select
		ID, PID, NAME, TYPE, SORT, URL, PERM_CODE as permCode,
		ICON,DESCRIPTION
		from t_sys_permission
		where
		type = 'F'
		<if test="userId != null">
			and role_id
			IN(SELECT role_id FROM t_sys_user_role WHERE
			user_id=#{userId}))
		</if>
		order by sort
	</select>
	<select id="findMenuOperation" resultType="com.embd.words.domain.sys.Permission">
		SELECT p.ID id,p.NAME
		NAME,p.URL url,p.PERM_CODE permCode,p.DESCRIPTION description FROM
		t_sys_permission p WHERE p.TYPE='O' AND p.PID=#{pid,jdbcType=INTEGER}
		ORDER
		BY p.SORT
	</select>
	
	<select id="findByParentId" resultType="com.embd.words.domain.sys.Permission">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from t_sys_permission p WHERE p.PID=#{pid,jdbcType=INTEGER}
	</select>

	<select id="selectList" resultType="com.embd.words.domain.sys.Permission">
		select
		<include refid="Base_Column_List" />
		from t_sys_permission
		<if test="where!=null and where!=''">
			where ${where}
		</if>
	</select>
	<select id="findPermissionsByRoleName" resultType="com.embd.words.domain.sys.Permission">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from t_sys_permission
		where id IN(SELECT permission_id FROM
		t_sys_role_permission
		WHERE role_id
		IN(SELECT ID FROM BDwords.T_SYS_ROLE
		WHERE name =#{roleName,jdbcType=VARCHAR}))
	</select>

</mapper>